services:
  gemini-api:
    build: .
    container_name: gemini-api-server
    ports:
      - "50014:50014"
    environment:
      # Method 1: Single cookie (backward compatibility)
      - SECURE_1PSID=${SECURE_1PSID:-}
      - SECURE_1PSIDTS=${SECURE_1PSIDTS:-}

      # Method 2: Multiple cookies via individual environment variables
      - COOKIE_1_PSID=${COOKIE_1_PSID:-}
      - COOKIE_1_PSIDTS=${COOKIE_1_PSIDTS:-}
      - COOKIE_1_NAME=${COOKIE_1_NAME:-}
      - COOKIE_2_PSID=${COOKIE_2_PSID:-}
      - COOKIE_2_PSIDTS=${COOKIE_2_PSIDTS:-}
      - COOKIE_2_NAME=${COOKIE_2_NAME:-}
      - COOKIE_3_PSID=${COOKIE_3_PSID:-}
      - COOKIE_3_PSIDTS=${COOKIE_3_PSIDTS:-}
      - COOKIE_3_NAME=${COOKIE_3_NAME:-}

      # Method 3: JSON format configuration
      - COOKIES_JSON=${COOKIES_JSON:-}

      # Optional: Proxy settings
      - PROXY=${PROXY:-}

      # Optional: Server settings
      - PORT=50014
      
    volumes:
      # Persist cookies to avoid re-authentication
      - ./gemini_cookies:/app/gemini_cookies
      
      # Optional: Mount logs directory
      - ./logs:/app/logs
      
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:50014/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Resource limits (optional)
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
